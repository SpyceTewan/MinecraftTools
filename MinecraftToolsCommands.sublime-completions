{
	"scope": "source.mcfunction",

	"completions": [

		// TODO: clone, data, effect, enchant, experience, fill, particle, playsound, recipe, replaceitem, scoreboard, setblock, setidletimeout, spreadplayers, stopsound, summon, tag, team, tellraw, title, tellraw, whitelist, worldborder, xp

		// Advancements
		{ "trigger": "advancement \t grant", "contents": "advancement grant ${1:(target)} ${2:(everything|from|only|through|until)} ${3:[advancement]}" },
		{ "trigger": "advancement \t revoke", "contents": "advancement revoke ${1:(target)} ${2:(everything|from|only|through|until)} ${3:[advancement]}" },
		
		// Basic
		"help",
		"list",
		"publish",
		"reload",
		"save-all",
		"save-on",
		"save-off",
		"stop",
		"seed",
		"setworldspawn",
		"spawnpoint",
		{ "trigger": "tp \t entity", "contents": "tp ${1:(target1)} ${2:(target2)}" },
		{ "trigger": "tp \t coordinates", "contents": "tp ${1:(target)} ${2:(x)} ${3:(y)} ${4:(z)}" },
		{ "trigger": "teleport \t entity", "contents": "teleport ${1:(target1)} ${2:(target2)}" },
		{ "trigger": "teleport \t coordinates", "contents": "teleport ${1:(target)} ${2:(x)} ${3:(y)} ${4:(z)}" },
		{ "trigger": "me", "contents": "me ${1:(message)}" },
		{ "trigger": "say", "contents": "say ${1:(message)}" },
		{ "trigger": "msg", "contents": "msg ${1:(target)} ${1:(message)}" },
		{ "trigger": "w", "contents": "w ${1:(target)} ${1:(message)}" },
		{ "trigger": "tell", "contents": "tell ${1:(target)} ${1:(message)}" },

		{ "trigger": "weather \t clear", "contents": "weather clear" },
		{ "trigger": "weather \t rain", "contents": "weather rain" },
		{ "trigger": "weather \t thunder", "contents": "weather thunder" },
		{ "trigger": "time \t set day", "contents": "time set day" },
		{ "trigger": "time \t set midnight", "contents": "time set midnight" },
		{ "trigger": "time \t set noon", "contents": "time set noon" },
		{ "trigger": "time \t set night", "contents": "time set night" },
		{ "trigger": "time \t add", "contents": "time add ${1:(ticks)}" },
		{ "trigger": "time \t query day", "contents": "time query day" },
		{ "trigger": "time \t query daytime", "contents": "time query daytime" },
		{ "trigger": "time \t query gametime", "contents": "time query gametime" },
		{ "trigger": "difficulty \t easy", "contents": "difficulty easy" },
		{ "trigger": "difficulty \t normal", "contents": "difficulty normal" },
		{ "trigger": "difficulty \t hard", "contents": "difficulty hard" },
		{ "trigger": "difficulty \t peaceful", "contents": "difficulty peaceful" },
		{ "trigger": "gamemode \t survival", "contents": "gamemode survival ${1:(target)}" },
		{ "trigger": "gamemode \t creative", "contents": "gamemode creative ${1:(target)}" },
		{ "trigger": "gamemode \t adventure", "contents": "gamemode adventure ${1:(target)}" },
		{ "trigger": "gamemode \t spectator", "contents": "gamemode spectator ${1:(target)}" },
		{ "trigger": "defaultgamemode \t survival", "contents": "defaultgamemode survival" },
		{ "trigger": "defaultgamemode \t creative", "contents": "defaultgamemode creative" },
		{ "trigger": "defaultgamemode \t adventure", "contents": "defaultgamemode adventure" },
		{ "trigger": "defaultgamemode \t spectator", "contents": "defaultgamemode spectator" },
		{ "trigger": "gamerule \t announceAdvancements", "contents": "gamerule announceAdvancements ${1:[value]}" },
		{ "trigger": "gamerule \t commandBlockOutput", "contents": "gamerule commandBlockOutput ${1:[value]}" },
		{ "trigger": "gamerule \t disableElytraMovementCheck", "contents": "gamerule disableElytraMovementCheck ${1:[value]}" },
		{ "trigger": "gamerule \t doDaylightCycle", "contents": "gamerule doDaylightCycle ${1:[value]}" },
		{ "trigger": "gamerule \t doEntityDrops", "contents": "gamerule doEntityDrops ${1:[value]}" },
		{ "trigger": "gamerule \t doFireTick", "contents": "gamerule doFireTick ${1:[value]}" },
		{ "trigger": "gamerule \t doLimitedCrafting", "contents": "gamerule doLimitedCrafting ${1:[value]}" },
		{ "trigger": "gamerule \t doMobLoot", "contents": "gamerule doMobLoot ${1:[value]}" },
		{ "trigger": "gamerule \t doMobSpawning", "contents": "gamerule doMobSpawning ${1:[value]}" },
		{ "trigger": "gamerule \t doTileDrops", "contents": "gamerule doTileDrops ${1:[value]}" },
		{ "trigger": "gamerule \t doWeatherCycle", "contents": "gamerule doWeatherCycle ${1:[value]}" },
		{ "trigger": "gamerule \t keepInventory", "contents": "gamerule keepInventory ${1:[value]}" },
		{ "trigger": "gamerule \t logAdminCommands", "contents": "gamerule logAdminCommands ${1:[value]}" },
		{ "trigger": "gamerule \t maxCommandChainLength", "contents": "gamerule maxCommandChainLength ${1:[value]}" },
		{ "trigger": "gamerule \t maxEntityCramming", "contents": "gamerule maxEntityCramming ${1:[value]}" },
		{ "trigger": "gamerule \t mobGriefing", "contents": "gamerule mobGriefing ${1:[value]}" },
		{ "trigger": "gamerule \t naturalRegeneration", "contents": "gamerule naturalRegeneration ${1:[value]}" },
		{ "trigger": "gamerule \t randomTickSpeed", "contents": "gamerule randomTickSpeed ${1:[value]}" },
		{ "trigger": "gamerule \t reducedDebugInfo", "contents": "gamerule reducedDebugInfo ${1:[value]}" },
		{ "trigger": "gamerule \t sendCommandFeedback", "contents": "gamerule sendCommandFeedback	 ${1:[value]}" },
		{ "trigger": "gamerule \t showDeathMessages", "contents": "gamerule showDeathMessages ${1:[value]}" },
		{ "trigger": "gamerule \t spawnRadius", "contents": "gamerule spawnRadius ${1:[value]}" },
		{ "trigger": "gamerule \t spectatorsGenerateChunks", "contents": "gamerule spectatorsGenerateChunks ${1:[value]}" },

		{ "trigger": "ban \t", "contents": "ban ${1:(target)} ${2:[reason]}" },
		{ "trigger": "ban-ip \t", "contents": "ban ${1:(target)} ${2:[reason]}" },
		{ "trigger": "kick \t", "contents": "kick ${1:(target)} ${2:[reason]}" },
		{ "trigger": "banlist \t ips", "contents": "banlist ips" },
		{ "trigger": "banlist \t players", "contents": "banlist players" },
		{ "trigger": "pardon \t", "contents": "pardon ${1:(target)}" },
		{ "trigger": "pardon-ip \t", "contents": "pardon ${1:(target)}" },
		{ "trigger": "kill", "contents": "kill ${1:(target)}" },
		{ "trigger": "clear", "contents": "clear ${1:(target)} ${2:minecraft:} ${3:[amount]}" },
		{ "trigger": "give", "contents": "give ${1:(target)} ${2:minecraft:} ${3:[amount]}" },
		{ "trigger": "op", "contents": "op ${1:(target)}" },
		{ "trigger": "deop", "contents": "deop ${1:(target)}" },

		// Displays (Title, Bossbar)
		{ "trigger": "bossbar \t create", "contents": "bossbar create ${1:(id)}" },
		{ "trigger": "bossbar \t get", "contents": "bossbar get ${1:(id)}" },
		{ "trigger": "bossbar \t list", "contents": "bossbar list" },
		{ "trigger": "bossbar \t remove", "contents": "bossbar remove ${1:(id)}" },
		{ "trigger": "bossbar \t set", "contents": "bossbar set ${1:(id)}" },

		// Execute
		{ "trigger": "execute \t ", "contents": "execute "},
		{ "trigger": "execute \t align", "contents": "align ${1:(axes)}" },
		{ "trigger": "execute \t anchored eyes", "contents": "anchored eyes" },
		{ "trigger": "execute \t anchored feet", "contents": "anchored feet" },
		{ "trigger": "execute \t as", "contents": "as ${1:(target)}" },
		{ "trigger": "execute \t at", "contents": "at ${1:(target)}" },
		{ "trigger": "execute \t facing x y z", "contents": "facing ${1:~} ${2:~} ${3:~}" },
		{ "trigger": "execute \t facing entity", "contents": "facing entity ${1:(target)}" },
		{ "trigger": "execute \t if block", "contents": "if block ${1:~} ${2:~} ${3:~} minecraft:$4" },
		{ "trigger": "execute \t if blocks", "contents": "if blocks ${1:~} ${2:~} ${3:~} ${4:~} ${5:~} ${6:~} ${7:~} ${8:~} ${9:~} minecraft:$10"},
		{ "trigger": "execute \t if entity", "contents": "if entity ${1:(target)}" },
		{ "trigger": "execute \t if score", "contents": "if score ${1:}" },
		{ "trigger": "execute \t in overworld", "contents": "in overworld" },
		{ "trigger": "execute \t in the_nether", "contents": "in the_nether" },
		{ "trigger": "execute \t in the_end", "contents": "in the_end" },
		{ "trigger": "execute \t positioned", "contents": "positioned ${1:(target)}" },
		{ "trigger": "execute \t rotated", "contents": "rotated ${1:(target)}" },
		{ "trigger": "execute \t run", "contents": "run " },
		{ "trigger": "execute \t store success", "contents": "store success ${1:(block|bossbar|entity|score)}" },
		{ "trigger": "execute \t store result", "contents": "store result ${1:(block|bossbar|entity|score)}" },
		{ "trigger": "execute \t unless", "contents": "unless ${1:(target)}" },

		// Advanced stuff
		{ "trigger": "datapack \t list enabled", "contents": "datapack list enabled" },
		{ "trigger": "datapack \t list available", "contents": "datapack list available" },
		{ "trigger": "datapack \t enable", "contents": "datapack enable ${1:(packname)}" },
		{ "trigger": "datapack \t disable", "contents": "datapack disable ${1:(packname)}" },
		{ "trigger": "function \t ", "contents": "function ${1:(functionname)}" },
		{ "trigger": "debug \t start", "contents": "debug start" },
		{ "trigger": "debug \t stop", "contents": "debug stop" },
		{ "trigger": "locate \t Buried_Treasure", "contents": "locate Buried_Treasure" },
		{ "trigger": "locate \t Desert_Pyramid", "contents": "locate Desert_Pyramid" },
		{ "trigger": "locate \t EndCity", "contents": "locate EndCity" },
		{ "trigger": "locate \t Fortress", "contents": "locate Fortress" },
		{ "trigger": "locate \t Igloo", "contents": "locate Igloo" },
		{ "trigger": "locate \t Jungle_Pyramid", "contents": "locate Jungle_Pyramid" },
		{ "trigger": "locate \t Mansion", "contents": "locate Mansion" },
		{ "trigger": "locate \t Mineshaft", "contents": "locate Mineshaft" },
		{ "trigger": "locate \t Monument", "contents": "locate Monument" },
		{ "trigger": "locate \t Ocean_Ruin", "contents": "locate Ocean_Ruin" },
		{ "trigger": "locate \t Shipwreck", "contents": "locate Shipwreck" },
		{ "trigger": "locate \t Stronghold", "contents": "locate Stronghold" },
		{ "trigger": "locate \t Swamp_Hut", "contents": "locate Swamp_Hut" },
		{ "trigger": "locate \t Village", "contents": "locate Village" },
	]

}