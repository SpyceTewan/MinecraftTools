{
	"scope": "source.mcfunction",

	"completions": [

		// TODO: clone, data, defaultgamemode, difficulty, effect, enchant, experience, fill, gamerule, help, list, locate, me, msg, particle, playsound, publish, recipe, reload, replaceitem, save-all, save-on, save-off, say, scoreboard, seed, setblock, setidletimeout, setworldspawn, spawnpoint, spreadplayers, stop, stopsound, summon, tag, team, teleport, tell, tellraw, time, title, tell, tellraw, tp, w, weather, whitelist, worldborder, xp

		// Advancements
		{ "trigger": "advancement \t grant", "contents": "advancement grant ${1:(target)} ${2:(everything|from|only|through|until)} ${3:[advancement]}" },
		{ "trigger": "advancement \t revoke", "contents": "advancement revoke ${1:(target)} ${2:(everything|from|only|through|until)} ${3:[advancement]}" },
		
		// Basic
		{ "trigger": "gamemode \t survival", "contents": "gamemode survival ${1:(target)}" },
		{ "trigger": "gamemode \t creative", "contents": "gamemode creative ${1:(target)}" },
		{ "trigger": "gamemode \t adventure", "contents": "gamemode adventure ${1:(target)}" },
		{ "trigger": "gamemode \t spectator", "contents": "gamemode spectator ${1:(target)}" },
		{ "trigger": "ban \t", "contents": "ban ${1:(target)} ${2:[reason]}" },
		{ "trigger": "ban-ip \t", "contents": "ban ${1:(target)} ${2:[reason]}" },
		{ "trigger": "kick \t", "contents": "kick ${1:(target)} ${2:[reason]}" },
		{ "trigger": "banlist \t ips", "contents": "banlist ips" },
		{ "trigger": "banlist \t players", "contents": "banlist players" },
		{ "trigger": "pardon \t", "contents": "pardon ${1:(target)}" },
		{ "trigger": "pardon-ip \t", "contents": "pardon ${1:(target)}" },
		{ "trigger": "kill", "contents": "kill ${1:(target)}" },
		{ "trigger": "clear", "contents": "clear ${1:(target)} ${2:minecraft:} ${3:[amount]}" },
		{ "trigger": "give", "contents": "give ${1:(target)} ${2:minecraft:} ${3:[amount]}" },
		{ "trigger": "op", "contents": "op ${1:(target)}" },
		{ "trigger": "deop", "contents": "deop ${1:(target)}" },

		// Displays (Title, Bossbar)
		{ "trigger": "bossbar \t create", "contents": "bossbar create ${1:(id)}" },
		{ "trigger": "bossbar \t get", "contents": "bossbar get ${1:(id)}" },
		{ "trigger": "bossbar \t list", "contents": "bossbar list" },
		{ "trigger": "bossbar \t remove", "contents": "bossbar remove ${1:(id)}" },
		{ "trigger": "bossbar \t set", "contents": "bossbar set ${1:(id)}" },

		// Execute
		{ "trigger": "execute \t ", "contents": "execute "},
		{ "trigger": "execute \t align", "contents": "align ${1:(axes)}" },
		{ "trigger": "execute \t anchored eyes", "contents": "anchored eyes" },
		{ "trigger": "execute \t anchored feet", "contents": "anchored feet" },
		{ "trigger": "execute \t as", "contents": "as ${1:(target)}" },
		{ "trigger": "execute \t at", "contents": "at ${1:(target)}" },
		{ "trigger": "execute \t facing x y z", "contents": "facing ${1:~} ${2:~} ${3:~}" },
		{ "trigger": "execute \t facing entity", "contents": "facing entity ${1:(target)}" },
		{ "trigger": "execute \t if block", "contents": "if block ${1:~} ${2:~} ${3:~} minecraft:$4" },
		{ "trigger": "execute \t if blocks", "contents": "if blocks ${1:~} ${2:~} ${3:~} ${4:~} ${5:~} ${6:~} ${7:~} ${8:~} ${9:~} minecraft:$10"},
		{ "trigger": "execute \t if entity", "contents": "if entity ${1:(target)}" },
		{ "trigger": "execute \t if score", "contents": "if score ${1:}" },
		{ "trigger": "execute \t in overworld", "contents": "in overworld" },
		{ "trigger": "execute \t in the_nether", "contents": "in the_nether" },
		{ "trigger": "execute \t in the_end", "contents": "in the_end" },
		{ "trigger": "execute \t positioned", "contents": "positioned ${1:(target)}" },
		{ "trigger": "execute \t rotated", "contents": "rotated ${1:(target)}" },
		{ "trigger": "execute \t run", "contents": "run " },
		{ "trigger": "execute \t store success", "contents": "store success ${1:(block|bossbar|entity|score)}" },
		{ "trigger": "execute \t store result", "contents": "store result ${1:(block|bossbar|entity|score)}" },
		{ "trigger": "execute \t unless", "contents": "unless ${1:(target)}" },

		// Advanced stuff
		{ "trigger": "datapack \t list enabled", "contents": "datapack list enabled" },
		{ "trigger": "datapack \t list available", "contents": "datapack list available" },
		{ "trigger": "datapack \t enable", "contents": "datapack enable ${1:(packname)}" },
		{ "trigger": "datapack \t disable", "contents": "datapack disable ${1:(packname)}" },
		{ "trigger": "function \t ", "contents": "function ${1:(functionname)}" },
		{ "trigger": "debug \t start", "contents": "debug start" },
		{ "trigger": "debug \t stop", "contents": "debug stop" },
	]

}